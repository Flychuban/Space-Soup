name: Weekly Summarization and Website Deployment

on:
  schedule:
    - cron: '0 0 * * 0'  # Schedule to run at 9:15 PM UTC
  push:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      
      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt  # Adjust as needed based on your project's requirements

      # - name: Install PyTorch
      #   run: |
      #     pip install torch

      - name: Install TensorFlow
        run: |
          pip install tensorflow
      
      - name: Install Keras
        run: |
          pip install keras
          pip install --upgrade git+https://github.com/huggingface/transformers.git

      - name: Run summarization script
        run: python news_summarization.py

      - name: Install Render CLI
        run: |
          CLI_URL="https://github.com/render-oss/render-cli/releases/download/v0.1.8/render-linux-x86_64"
          curl -o render "$CLI_URL"
          chmod +x render
          sudo mv render /usr/local/bin/
      
      - name: Verify Render CLI Installation
        run: render --version

      - name: Set Render Environment Variables
        run: |
          export SITE_PROJECT_ID=srv-ckgso1kldqrs73f58rrg
          export SITE_SERVICE_ID=ckgso1kldqrs73f58rrg
          export AUDIOS_PROJECT_ID=srv-ckg5av6afg7c73eu6400
          export AUDIOS_SERVICE_ID=dep-ckg5aveafg7c73eu6490
      
      - name: Deploy Flask App to Render
        run: |
          render set --project $SITE_PROJECT_ID --service $SITE_SERVICE_ID
          render up -n web_page/main.py -p website -t website/templates -s website/static

      - name: Set FLASK_APP Environment Variable
        run: render env add FLASK_APP=web_page/main.py

      - name: Get Latest MP3
        run: |
          cd ./generated_audios
          latest_mp3_path="generated_audio.mp3"
          latest_mp3=$(realpath "$latest_mp3_path")
          echo "Latest MP3 file: $latest_mp3"
          echo "LATEST_MP3=$latest_mp3" >> $GITHUB_ENV


      - name: Deploy Most Recent MP3 to Render
        run: |
          render set --project $AUDIOS_PROJECT_ID --service $AUDIOS_SERVICE_ID
          echo "Latest MP3 file: $LATEST_MP3"
          # Create an environment file to set the LATEST_MP3 variable
          echo "LATEST_MP3=$LATEST_MP3" > envfile
          
          # Use the environment file with the render up command
          render up -e envfile
        env:
          GITHUB_ENV: ./envfile  # Export the environment file for the duration of this step

      - name: Download Latest Audio
        run: |
          python get_newest_audio.py

      - name: Deploy Website to Render
        run: |
          render set --project $SITE_PROJECT_ID --service $SITE_SERVICE_ID      
          cd web_page
          render up